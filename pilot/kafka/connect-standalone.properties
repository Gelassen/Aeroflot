# Kafka Connect standalone mode configuration

# Specifies a list of comma-separated directories that contain Kafka Connect plugins (connectors and converters).
# This is where you would place the connector JAR files and any required dependencies.
plugin.path=/kafka/connect-plugins

# Specifies the key converter to use for serializing and deserializing Kafka message keys.
# Use JsonConverter for JSON data.
key.converter=org.apache.kafka.connect.json.JsonConverter

# Specifies the value converter to use for serializing and deserializing Kafka message values.
# Use JsonConverter for JSON data.
value.converter=org.apache.kafka.connect.json.JsonConverter

# Specifies the list of worker configurations.
# You can define multiple configurations, each with its own unique name.
# Each worker configuration corresponds to a set of connectors and tasks.
# Here, we define a single worker configuration named 'jdbc-sink'.
# The 'jdbc-sink' worker configuration will be used to run the JDBC Sink Connector.
# You can have multiple worker configurations for running different connectors with different configurations.
worker.config=connect-standalone-worker.properties

# Specifies the Kafka bootstrap servers.
# Replace 'localhost:9092' with the actual list of Kafka broker addresses in your Kafka cluster.
bootstrap.servers=172.16.254.2:9092

# Specifies the file name for storing connector offsets.
# This is required for managing connector offsets and tracking the progress of connectors.
# Replace '/tmp/connect.offsets' with the actual file path where you want to store the connector offsets.
offset.storage.file.filename=/tmp/connect.offsets

# Specifies the file name for storing connector configurations.
# This is optional but recommended for persisting connector configurations between restarts.
# Replace '/tmp/connect.configs' with the actual file path where you want to store the connector configurations.
config.storage.file.filename=/tmp/connect.configs

# Specifies the file name for storing connector status.
# This is optional but recommended for monitoring connector status and managing errors.
# Replace '/tmp/connect.status' with the actual file path where you want to store the connector status.
status.storage.file.filename=/tmp/connect.status